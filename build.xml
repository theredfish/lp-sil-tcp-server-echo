<?xml version="1.0" encoding="UTF-8"?>
<project name="Operations" default="displayProperties" basedir=".">

	<!-- =================================================================== -->
	<!-- Définition des propriétés du projet -->
	<!-- =================================================================== -->

	<!-- Définition des propriétés propres à ce projet -->
	<property file="${basedir}/project.properties" />
	<!-- répertoire source du projet -->
	<property name="project.dir" location="./" />
	<!-- répertoire du code source du projet -->
	<property name="src.dir" value="src" />

	<!-- répertoire de construction -->
	<property name="classes.dir" value="bin" />
	<property name="jar.dir" value="jar" />
	<property name="javadoc.dir" value="doc" />
	<property name="dist.dir" value="dist" />
	<property name="tmp.dir" value="tmp" />

	<property name="reports.data.dir" value="${reports.dir}/data" />
	<property name="reports.html.dir" value="${reports.dir}/html" />

	<property name="changelog.file" value="Changelog.txt" />

	<property name="debug.flag" value="on"/>
	<property name="verbose.flag" value="no"/>


	<!--Default excludes -->
	<defaultexcludes add="**/.gitkeep"/>

	<!-- =================================================================== -->
	<!-- Definition des  différents listfile, patternset et path -->
	<!-- =================================================================== -->

	<path id="compile.path">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar"/>
		</fileset>
	</path>

	<!-- path pour run -->
	<path id="run.path">
		<pathelement location="${classes.dir}"/>
	</path>

	<!-- =================================================================== -->
	<!-- Default -->
	<!-- =================================================================== -->

	<target name="displayProperties" description="Par défaut, affichage des propriétés du projet">
		<tstamp />
		<echo message="${TODAY}," />
		<echo message="Project ${ant.project.name}" />
		<echo message="Version ${project.version}" />
		<echo message="Authors ${project.author}" />
		<echo message="Ant Configuration File ${ant.file}" />
		<echo message="JVM  ${ant.java.version}" />
		<echoproperties/>
	</target>

	<!-- =================================================================== -->
	<!-- Patterns -->
	<!-- =================================================================== -->
	<patternset id="jar.pattern">
		<include name="*.class"/>
	</patternset>

	<!-- =================================================================== -->
		<!-- clean generated files and backup files -->
	<!-- =================================================================== -->

	<target name="clean" description="Suppression des répertoires et fichiers générés">

		<tstamp />

		<delete includeemptydirs="true">
			<fileset dir="${classes.dir}" includes="**/*"/>
		</delete>
		<delete dir="${javadoc.dir}" />
		<delete dir="${jar.dir}" />
		<delete dir="${dist.dir}" />

		<echo message="${DSTAMP}-${TSTAMP} -- Suppression des répértoires et fichiers générés" />
		<echo file="${changelog.file}" message="${DSTAMP}-${TSTAMP} -- Suppression des répértoires et fichiers générés${line.separator}" />

	</target>

	<!-- =================================================================== -->
	<!-- Initialisation -->
	<!-- =================================================================== -->

	<target name="init" depends="clean" description="Création des répertoires de construction du projet.">

		<tstamp />

		<mkdir dir="${classes.dir}"/>
		<mkdir dir="${javadoc.dir}"/>
		<mkdir dir="${jar.dir}"/>

		<copy file=".env.example" tofile=".env"/>
		<echo message="${DSTAMP}-${TSTAMP} -- Création des répertoires de construction du projet" />
		<echo file="${changelog.file}" message="${DSTAMP}-${TSTAMP} -- Création des répertoires de construction du projet${line.separator}" />
	</target>


	<!-- ================================================-->
	<!-- Compilation des sources          -->
	<!-- ================================================-->

	<target name="compile" depends="init" description="Compilation des sources métiers du projet">
	  <javac srcdir="${src.dir}"
		 destdir="${classes.dir}"
		 optimize="off"
		 debug="${debug.flag}"
		 verbose="${verbose.flag}"
		 deprecation="on"
		 source="1.8"
		 target="1.8">
	  </javac>
	</target>

	<!-- ================================================-->
	<!-- Génération de la documentation Javadoc          -->
	<!-- ================================================-->

	<target name="javadoc" description="Génération de la documentation Javadoc">
		<javadoc
			sourcepath="${src.dir}"
			destdir="${javadoc.dir}"
			packagenames="${package.name}"
			author="true"
			version="true"
			use="true"
			access="private"
			linksource="true"
			windowtitle="${ant.project.name}">
		<!-- <classpath refid="compile.path"/> -->

			<doctitle><![CDATA[<h1>${ant.project.name}</h1>]]></doctitle>
			<bottom><![CDATA[<i>Alexis Chappron and Julian Didier.</i>]]></bottom>
			<tag name="todo" scope="all" description="To do:"/>
			<group title="Group 1 Packages" packages="com.dummy.test.a*"/>
			<group title="Group 2 Packages" packages="com.dummy.test.b*:com.dummy.test.c*"/>
			<link offline="true" href="http://java.sun.com/j2se/1.5.0/docs/api/" packagelistLoc="C:\tmp"/>
			<link href="http://developer.java.sun.com/developer/products/xml/docs/api/"/>
	  </javadoc>
	</target>


	<!-- =================================================================== -->
	<!-- Exécution des classes via externe refid                             -->
	<!-- =================================================================== -->

	<target name="run" depends="compile" description="Commande d'exécution pointant le dossier de binaires (en externe)" >

		<java classname='${mainclass}'>
			<classpath >
				<path refid="run.path"/>
			</classpath>
		</java>

		<echo>Exécution réalisée</echo>

	</target>

	<!-- =================================================================== -->
	<!-- Produit une distribution des sources                       -->
	<!-- =================================================================== -->

	<target name="dist" depends="clean"  description="Produit une distribution des sources  du projet ">
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${tmp.dir}"/>
		<copy todir="${tmp.dir}">
			<fileset dir="${basedir}" casesensitive="yes">
				<include name="**/*"/>
				<include name=".project"/>
				<include name=".classpath"/>
				<exclude name=".settings"/>
				<exclude name="${dist.dir}"/>
				<exclude name="${classes.dir}"/>
				<exclude name="${tmp.dir}"/>
			</fileset>

		</copy>

		<tstamp/>

		<zip zipfile="${dist.dir}/${project.shortname}-${DSTAMP}-${TSTAMP}-src.zip"
				 basedir="${tmp.dir}"
				 whenempty="create"/>

		<delete dir="${tmp.dir}"/>
	</target>
</project>
